generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model posts {
  id          String    @id @default(cuid()) @map("_id")
  title       String
  slug        String
  content     String
  published   Boolean
  author      User      @relation(fields: [authorId], references: [id])
  authorId    String
  publishedAt DateTime? @default(now())
}

model Account {
  id                String  @id @default(uuid()) @map("_id")
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid()) @map("_id") // Added @map("_id")
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid()) @map("_id") // Added @map("_id")
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  accounts      Account[]
  sessions      Session[]
  Posts         posts[]

  @@map("users")
}

model VerificationToken {
  identifier String   @id @default(cuid()) @map("_id")
  token      String
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}
